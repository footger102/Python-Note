#getcha : a counterintuitive feature of a programming language that often leads to mistakes in programs
#예시는 다음과 같습니다.


  def createStudent(name, age, grades=[]):
    return {
        'name': name,
        'age': age,
        'grades': grades
    }
    
  def addGrade(student, grade):
    student['grades'].append(grade)
    print(student['grades'])
    
  addGrade(chrisley, 90)
  addGrade(dallas, 100)
  
  
# 이것의 결과는 [90]; [100]이 아니라 [90]; [90, 100]입니다. 왜 그럴까요? 직관에 반하는 결과가 나온건데 이런걸 getcha라고 합니다.
# 이것이 왜 그러냐면..
# 파이썬에는 mutable object(ex. list, set, dictionary)와 immutable object(ex. int, float tuple, string)으로 나뉩니다.
# 그러니까 우리가 function을 정의할 때, parameter의 default value를 한 번 정하면, 그게 계속 쓰여서 그렇습니다.
# codecademy의 표현을 따르면 : when we call a function, the default values we provide for parameters are noly created once, and used for each subsequent call of the function.
# memory id를 확인하면 더 정확합니다.


  print(id(chrisley['grades']))
  print(id(dallas['grades']))
  
  #output
  139828567365696
  139828567365696
